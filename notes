notes g#3 #3 #3 4

# In data science, we often have the situation, that data appear in an unsorted order such as the following list:

my_list = [338, 693, 19, 144, 85, 958, 495, 218, 647, 50, 337, 869, 537, 477, 625, 31, 173, 795, 61, 257, 983, 415, 16, 112, 53]


# However, a simple increasing or decreasing sort is not always meaningful.
# For instance, if you want to rate low values higher or only sort values below/above a certain threshold
# and keep others in the unsorted order.
#
# Use the function 'sorted(...)' with lambda functions to sort 'my_list' in three different ways:

#######################################################################
#                                                                     #
#                                 TASK 1                              #
#                                                                     #
#######################################################################


# Sort 'my_list' in descending form.

# Hint: The Output of the your 'sorted(...) function should be:
#       [983, 958, 869, 795, 693, 647, 625, 537, 495, 477, 415, 338, 337, 257, 218, 173, 144, 112, 85, 61, 53, 50, 31, 19, 16]

##########################
# your work: replace the list (right of the '=') on the next code line
#            with YOUR 'sorted(....)' function for Task 3
##########################


sortedList_Task01 = [16, 19, 31]
print("Task1: sortedList_Task01: ", sortedList_Task01)


my_list = [338, 693, 19, 144, 85, 958, 495, 218, 647, 50, 337, 869, 537, 477, 625, 31, 173, 795, 61, 257, 983, 415, 16, 112, 53]

sortedList_Task01 = sorted(my_list, key=lambda x: x, reverse=True)

print("Task1: sortedList_Task01: ", sortedList_Task01)

#######################################################################
#                                                                     #
#                                 TASK 2                              #
#                                                                     #
#######################################################################


# Sort 'my_list' in increasing order while using the square for all values less than 30.

# Hint: The Output of the your 'sorted(...) function should be:
#       [31, 50, 53, 61, 85, 112, 144, 173, 218, 16, 257, 337, 338, 19, 415, 477, 495, 537, 625, 647, 693, 795, 869, 958, 983]

##########################
# your work: replace the list (right of the '=') on the next code line
#            with YOUR 'sorted(....)' function for Task 3
##########################


sortedList_Task02 = [16, 19, 31]
print("Task2: sortedList_Task02: ", sortedList_Task02)
my_list = [338, 693, 19, 144, 85, 958, 495, 218, 647, 50, 337, 869, 537, 477, 625, 31, 173, 795, 61, 257, 983, 415, 16, 112, 53]

sortedList_Task02 = sorted(my_list, key=lambda x: x if x >= 30 else x**2)

print("Task2: sortedList_Task02: ", sortedList_Task02)


#######################################################################
#                                                                     #
#                                 TASK 3                              #
#                                                                     #
#######################################################################


# In the list 'my_list' sort only values less than 100 and keep all others in original order after the sorted values.


# Hint 1: A simple example would be: [400, 60, 200, 7, 40, 300]  ->  [7, 40, 60, 400, 200, 300]

# Hint 2: The Output of the your 'sorted(...) function should be:
#         [16, 19, 31, 50, 53, 61, 85, 338, 693, 144, 958, 495, 218, 647, 337, 869, 537, 477, 625, 173, 795, 257, 983, 415, 112]

##########################
# your work: replace the list (right of the '=') on the next code line
#            with YOUR 'sorted(....)' function for Task 3
##########################
sortedList_Task03 = [16, 19, 31]
print("Task3: sortedList_Task03: ", sortedList_Task03)
my_list = [338, 693, 19, 144, 85, 958, 495, 218, 647, 50, 337, 869, 537, 477, 625, 31, 173, 795, 61, 257, 983, 415, 16, 112, 53]

sortedList_Task03 = sorted(my_list, key=lambda x: (x, x < 100))

print("Task3: sortedList_Task03: ", sortedList_Task03)
