 notes


1. Write a Python program to convert JSON data to Python object. 

gggg



that pzthonhg


ffff

1. Generate a code
blablbablba 

#1
Note:
This is an independent task. That means, the "Logger" class in this task has nothing (!!!) to do with any other task of the exam!
 
Tasks to solve:
Write a simple logger class (class name: "Logger") that creates an append-only file when a new log-object is initiated.
The logger comprises:
a private entry number generator starting with 1 and increments with each new log entry
one function 'add_entry()'  to append a new log entry to the file 'log.txt' starting with the entry number at the begining.
each entry number is written with minimum 5 characters and enclosed in square brackets.
 
Two typical log entries look like:
[    1] First entry.
[    2] Second entry.
...
[  125] This is the 125th entry.
 
With this 'logger test script' you can test your Logger class: 
logger = Logger('log.txt')
logger.add_entry('First entry.')
logger.add_entry('Second entry.')
logger.add_entry('The PDS MEP is running!')
 
Important:
Copy your whole solution (with the 'logger test script') into the text box below.
Copy also the content of your generated 'log.txt' File on the end of your solution. 

#1
class Logger:
    def __init__(self, filename):
        self.filename = filename
        self.entry_number = 1  # Initial entry number

        # Create an append-only file and write the header
        with open(self.filename, 'a') as file:
            file.write("Log Entries:\n")

    def add_entry(self, message):
        # Format the entry number with a minimum of 5 characters and enclosed in square brackets
        formatted_entry = f"[{self.entry_number:5}] {message}\n"

        # Append the entry to the file
        with open(self.filename, 'a') as file:
            file.write(formatted_entry)

        # Increment the entry number for the next log entry
        self.entry_number += 1

# Logger test script
logger = Logger('log.txt')
logger.add_entry('First entry.')
logger.add_entry('Second entry.')
logger.add_entry('The PDS MEP is running!')
